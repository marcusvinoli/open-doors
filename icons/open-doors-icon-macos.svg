<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   width="63.01059mm"
   height="63.008816mm"
   viewBox="0 0 63.01059 63.008816"
   version="1.1"
   id="svg1"
   xml:space="preserve"
   xmlns:xlink="http://www.w3.org/1999/xlink"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"><defs
     id="defs1"><linearGradient
       id="linearGradient4035"><stop
         style="stop-color:#c9d5da;stop-opacity:0.92030847;"
         offset="0"
         id="stop4034" /><stop
         style="stop-color:#e9edf8;stop-opacity:0;"
         offset="1"
         id="stop4035" /></linearGradient><linearGradient
       id="linearGradient3995"><stop
         style="stop-color:#2b3245;stop-opacity:1;"
         offset="0"
         id="stop3995" /><stop
         style="stop-color:#2b3245;stop-opacity:0;"
         offset="1"
         id="stop3996" /></linearGradient><linearGradient
       id="linearGradient3993"><stop
         style="stop-color:#e9edf8;stop-opacity:0.99607843;"
         offset="0"
         id="stop3993" /><stop
         style="stop-color:#e9edf8;stop-opacity:0;"
         offset="1"
         id="stop3994" /></linearGradient><linearGradient
       id="swatch5"><stop
         style="stop-color:#ffffff;stop-opacity:1;"
         offset="0"
         id="stop5" /></linearGradient><linearGradient
       xlink:href="#linearGradient3993"
       id="linearGradient3994"
       x1="-242.30179"
       y1="-351.42859"
       x2="-242.30179"
       y2="-391.49097"
       gradientUnits="userSpaceOnUse"
       gradientTransform="matrix(1,0,0,-1,-3.6666667e-7,-782.98196)" /><linearGradient
       xlink:href="#linearGradient3995"
       id="linearGradient3996"
       x1="-415.02811"
       y1="-460.93097"
       x2="-456.40808"
       y2="-501.62866"
       gradientUnits="userSpaceOnUse" /><linearGradient
       xlink:href="#linearGradient3995"
       id="linearGradient3997"
       gradientUnits="userSpaceOnUse"
       x1="-430.30167"
       y1="-459.37335"
       x2="-440.18521"
       y2="-536.71863" /><linearGradient
       xlink:href="#linearGradient3995"
       id="linearGradient3998"
       gradientUnits="userSpaceOnUse"
       x1="-430.30167"
       y1="-459.37335"
       x2="-440.18521"
       y2="-536.71863" /><linearGradient
       xlink:href="#linearGradient4035"
       id="linearGradient4034"
       gradientUnits="userSpaceOnUse"
       x1="-242.30179"
       y1="-351.42859"
       x2="-242.30179"
       y2="-391.49097" /></defs><g
     id="layer1"
     transform="translate(273.8071,422.99373)"><path
       d="m -258.63439,-422.99338 c -0.76271,-0.005 -1.54625,0.0472 -2.31666,0.12868 -0.0867,0.009 -0.17532,0.016 -0.26097,0.0258 -0.2632,0.0311 -0.51682,0.0688 -0.77308,0.10903 -0.14004,0.0221 -0.27969,0.0452 -0.41703,0.0703 -0.2904,0.0521 -0.56919,0.10869 -0.84284,0.17209 -0.003,6.2e-4 -0.005,0.001 -0.008,0.002 -0.29727,0.069 -0.59886,0.13608 -0.86972,0.21756 -3.00059,0.90259 -5.54145,2.7768 -7.27449,5.36556 -1.34131,2.0036 -2.08422,4.29668 -2.3151,7.1236 -0.009,0.10594 -0.0217,0.20918 -0.0295,0.31626 -0.031,0.46326 -0.051,0.93829 -0.0553,1.43144 -0.001,0.12912 -2.6e-4,0.10595 -0.001,0.20464 -1.5e-4,0.0753 -0.008,0.14546 -0.008,0.22117 0.001,0.19279 0.003,0.0904 0.005,0.19637 -6e-5,0.0794 0.001,0.13925 0.003,0.11421 0.002,0.0524 0.005,0.31453 0.006,0.21962 0.003,-0.15393 0.0114,-0.29022 0.0155,-0.43977 -0.0201,0.90878 -0.0307,8.27482 -0.0305,16.02435 -2.4e-4,7.74729 0.0104,15.10763 0.0305,16.01969 -0.004,-0.14824 -0.0128,-0.2831 -0.0155,-0.43563 -0.002,-0.0948 -0.004,0.167 -0.006,0.21911 -0.002,-0.025 -0.003,0.0349 -0.003,0.1142 -0.002,0.10599 -0.004,0.003 -0.005,0.19637 -5.4e-4,0.0757 0.008,0.14589 0.008,0.22118 8.2e-4,0.0988 -5e-5,0.0758 0.001,0.20516 0.004,0.49316 0.0243,0.96816 0.0553,1.43143 0.008,0.1067 0.0196,0.20966 0.0289,0.31523 0.2308,2.82734 0.97417,5.12029 2.31562,7.12411 1.73304,2.58876 4.2739,4.46297 7.27449,5.36557 0.26879,0.0808 0.56818,0.14792 0.863,0.21652 0.006,10e-4 0.0117,0.003 0.0176,0.004 0.27122,0.0628 0.54742,0.11882 0.83509,0.17054 0.14155,0.0259 0.28553,0.0491 0.42995,0.0718 0.25408,0.0398 0.50549,0.0772 0.76636,0.108 0.0826,0.01 0.16813,0.0162 0.25166,0.0248 0.77288,0.082 1.55915,0.1341 2.32442,0.1292 l 0.52503,-0.004 0.30489,0.003 -0.12299,-0.004 0.0543,-5.1e-4 -0.61805,-0.0202 c 0.56986,0.016 7.58236,0.0221 14.62237,0.0233 0.78546,1.4e-4 0.83851,0.003 1.63142,0.003 0.81543,4e-5 0.87183,-0.003 1.67794,-0.003 6.94173,-10e-4 13.88656,-0.007 14.44924,-0.0227 l -0.61856,0.0202 0.0543,5.2e-4 -0.12299,0.004 0.30489,-0.003 0.52503,0.004 c 0.76544,0.005 1.55187,-0.0477 2.32492,-0.12971 0.0833,-0.009 0.16875,-0.0148 0.25115,-0.0243 0.26058,-0.0307 0.51152,-0.0683 0.76533,-0.10801 0.14513,-0.0229 0.28977,-0.0458 0.43201,-0.0718 0.28924,-0.052 0.56664,-0.10836 0.83923,-0.17156 0.004,-9.7e-4 0.008,-0.002 0.0119,-0.003 0.29482,-0.0686 0.59421,-0.13568 0.863,-0.21653 3.0006,-0.9026 5.54197,-2.7768 7.27501,-5.36556 1.34145,-2.00382 2.08482,-4.29678 2.31562,-7.12411 0.009,-0.1054 0.0212,-0.20817 0.0289,-0.31471 0.031,-0.46343 0.0505,-0.93861 0.0548,-1.43196 0.001,-0.13067 2.6e-4,-0.10771 0.001,-0.20722 1.5e-4,-0.0746 0.008,-0.14411 0.008,-0.21911 -0.001,-0.18741 -0.003,-0.0851 -0.005,-0.19068 8e-5,-0.0825 -0.001,-0.14453 -0.003,-0.11834 -0.002,-0.0534 -0.004,-0.31611 -0.006,-0.22066 -0.003,0.15289 -0.0114,0.28808 -0.0155,0.43666 0.02,-0.90832 0.0301,-8.24643 0.03,-15.96956 0,-0.0497 1e-5,-0.0531 0,-0.10284 1.8e-4,-7.72512 -0.01,-15.06867 -0.03,-15.9737 0.004,0.14989 0.0127,0.28651 0.0155,0.4408 0.002,0.0956 0.004,-0.1675 0.006,-0.22118 0.002,0.0262 0.003,-0.0358 0.003,-0.11834 0.002,-0.10561 0.004,-0.003 0.005,-0.19068 5.3e-4,-0.075 -0.008,-0.14452 -0.008,-0.21911 -8.2e-4,-0.0994 6e-5,-0.0763 -0.001,-0.20671 -0.004,-0.49334 -0.0238,-0.96853 -0.0548,-1.43195 -0.008,-0.10692 -0.0201,-0.20996 -0.0295,-0.31574 -0.23088,-2.82692 -0.9738,-5.12 -2.3151,-7.1236 -1.73304,-2.58877 -4.27441,-4.46297 -7.27501,-5.36556 -0.27086,-0.0815 -0.57244,-0.14852 -0.86971,-0.21756 -0.002,-4.2e-4 -0.003,-10e-4 -0.005,-0.002 -8.4e-4,-2e-4 -0.002,-3.1e-4 -0.003,-5.1e-4 -0.27323,-0.0633 -0.55136,-0.12002 -0.84129,-0.17209 -0.13803,-0.0253 -0.27835,-0.0481 -0.4191,-0.0703 -0.25599,-0.0402 -0.50914,-0.078 -0.77205,-0.10903 -0.0855,-0.01 -0.174,-0.017 -0.26045,-0.0258 -0.77058,-0.0815 -1.5543,-0.13357 -2.31717,-0.12868 l -0.54725,0.004 -0.28267,-0.003 0.11059,0.004 -0.0419,5.2e-4 0.6382,0.0207 c -0.61618,-0.0178 -8.365,-0.0263 -16.27446,-0.0258 -7.85091,-3e-4 -15.55026,0.009 -16.15457,0.0263 l 0.64648,-0.0212 -0.0408,-5.2e-4 0.10956,-0.004 -0.28267,0.003 z"
       id="path4-9"
       style="opacity:1;fill:#e3e7f3;fill-opacity:1" /><path
       id="rect3968-0-55-2-5-0-7-4-5-3-0-2"
       style="fill:#2abcac;fill-opacity:1;stroke:#3bcd80;stroke-width:0;stroke-linecap:round"
       d="m -235.17773,-412.05664 c -5.10274,0.84966 -10.19945,1.74463 -15.28711,2.67578 -1.12096,0.30379 -1.90775,1.47147 -1.69147,2.62578 0.0105,8.83058 -0.0378,17.66555 0.0352,26.49336 0.20613,1.53219 2.39344,2.12915 3.41406,1.01563 -0.93625,1.87972 -2.00827,3.7021 -2.86524,5.61523 -0.4096,1.31968 0.71222,2.86745 2.13624,2.68237 1.59276,-0.0977 3.13929,-0.55489 4.72088,-0.76217 3.62223,-0.65615 7.2648,-1.21799 10.86749,-1.96903 1.16811,-0.38228 1.68738,-1.71208 1.47856,-2.85273 -0.016,-8.73631 0.0431,-17.48015 -0.043,-26.21172 -0.24452,-1.54903 -2.48663,-2.14262 -3.45312,-0.90234 0.95179,-1.90612 2.02947,-3.7572 2.9082,-5.69532 0.3766,-1.22584 -0.51958,-2.65999 -1.83985,-2.70312 -0.12637,2.9e-4 -0.2555,-0.0346 -0.38085,-0.0117 z" /><path
       id="rect3968-0-55-2-5-0-7-4-5-3-0"
       style="fill:#2ac7ac;fill-opacity:1;stroke:#3bcd80;stroke-width:0;stroke-linecap:round"
       d="m -235.09038,-411.53516 c -5.01917,0.81495 -10.02599,1.74546 -15.03711,2.61719 -0.8992,0.17359 -1.65472,0.98616 -1.5,1.93867 0.0144,8.86648 -0.0288,17.73552 0.0215,26.60039 0.17319,1.30428 2.16162,1.63212 2.74219,0.44922 5.08073,-9.73926 10.20642,-19.45726 15.25913,-29.20977 0.47031,-0.87306 0.069,-2.13798 -0.97381,-2.32335 -0.16313,-0.0547 -0.34134,-0.0684 -0.51188,-0.0724 z m 0.58008,7.74805 c -1.21505,0.0851 -1.43791,1.49381 -1.98474,2.32933 -4.79762,9.19356 -9.63313,18.37033 -14.40715,27.57435 -0.53071,0.92423 -0.0403,2.26522 1.07743,2.3971 1.22383,0.0897 2.42496,-0.36781 3.63832,-0.50169 3.98885,-0.72269 7.99811,-1.36237 11.97429,-2.1366 0.93171,-0.20986 1.48122,-1.1581 1.31318,-2.0785 -0.0157,-8.8004 0.0314,-17.60389 -0.0234,-26.40235 -0.11653,-0.73773 -0.85781,-1.25599 -1.58789,-1.18164 z" /><path
       d="m -258.63439,-359.98858 c -0.76271,0.005 -1.54625,-0.0472 -2.31666,-0.12868 -0.0867,-0.009 -0.17532,-0.016 -0.26097,-0.0258 -0.2632,-0.0311 -0.51682,-0.0688 -0.77308,-0.10903 -0.14004,-0.0221 -0.27969,-0.0452 -0.41703,-0.0703 -0.2904,-0.0521 -0.56919,-0.10869 -0.84284,-0.17209 -0.003,-6.2e-4 -0.005,-10e-4 -0.008,-0.002 -0.29727,-0.069 -0.59886,-0.13608 -0.86972,-0.21756 -3.00059,-0.90259 -5.54145,-2.7768 -7.27449,-5.36556 -1.34131,-2.0036 -2.08422,-4.29668 -2.3151,-7.1236 -0.009,-0.10594 -0.0217,-0.20918 -0.0295,-0.31626 -0.031,-0.46326 -0.051,-0.93829 -0.0553,-1.43144 -0.001,-0.12912 -2.6e-4,-0.10595 -0.001,-0.20464 -1.5e-4,-0.0753 -0.008,-0.14546 -0.008,-0.22117 0.001,-0.19279 0.003,-0.0904 0.005,-0.19637 -6e-5,-0.0794 0.001,-0.13925 0.003,-0.11421 0.002,-0.0524 0.005,-0.31453 0.006,-0.21962 0.003,0.15393 0.0114,0.29022 0.0155,0.43977 -0.0201,-0.90878 -0.0307,-8.27482 -0.0305,-16.02435 -2.4e-4,-7.74729 0.0104,-15.10763 0.0305,-16.01969 -0.004,0.14824 -0.0128,0.2831 -0.0155,0.43563 -0.002,0.0948 -0.004,-0.167 -0.006,-0.21911 -0.002,0.025 -0.003,-0.0349 -0.003,-0.1142 -0.002,-0.10599 -0.004,-0.003 -0.005,-0.19637 -5.4e-4,-0.0757 0.008,-0.14589 0.008,-0.22118 8.2e-4,-0.0988 -5e-5,-0.0758 0.001,-0.20516 0.004,-0.49316 0.0243,-0.96816 0.0553,-1.43143 0.008,-0.1067 0.0196,-0.20966 0.0289,-0.31523 0.2308,-2.82734 0.97417,-5.12029 2.31562,-7.12411 1.73304,-2.58876 4.2739,-4.46297 7.27449,-5.36557 0.26879,-0.0808 0.56818,-0.14792 0.863,-0.21652 0.006,-0.001 0.0117,-0.003 0.0176,-0.004 0.27122,-0.0628 0.54742,-0.11882 0.83509,-0.17054 0.14155,-0.0259 0.28553,-0.0491 0.42995,-0.0718 0.25408,-0.0398 0.50549,-0.0772 0.76636,-0.108 0.0826,-0.01 0.16813,-0.0162 0.25166,-0.0248 0.77288,-0.082 1.55915,-0.1341 2.32442,-0.1292 l 0.52503,0.004 0.30489,-0.003 -0.12299,0.004 0.0543,5.1e-4 -0.61805,0.0202 c 0.56986,-0.016 7.58236,-0.0221 14.62237,-0.0233 0.78546,-1.4e-4 0.83851,-0.003 1.63142,-0.003 0.81543,-4e-5 0.87183,0.003 1.67794,0.003 6.94173,0.001 13.88656,0.007 14.44924,0.0227 l -0.61856,-0.0202 0.0543,-5.2e-4 -0.12299,-0.004 0.30489,0.003 0.52503,-0.004 c 0.76544,-0.005 1.55187,0.0477 2.32492,0.12971 0.0833,0.009 0.16875,0.0148 0.25115,0.0243 0.26058,0.0307 0.51152,0.0683 0.76533,0.10801 0.14513,0.0229 0.28977,0.0458 0.43201,0.0718 0.28924,0.052 0.56664,0.10836 0.83923,0.17156 0.004,9.7e-4 0.008,0.002 0.0119,0.003 0.29482,0.0686 0.59421,0.13568 0.863,0.21653 3.0006,0.9026 5.54197,2.7768 7.27501,5.36556 1.34145,2.00382 2.08482,4.29678 2.31562,7.12411 0.009,0.1054 0.0212,0.20817 0.0289,0.31471 0.031,0.46343 0.0505,0.93861 0.0548,1.43196 0.001,0.13067 2.6e-4,0.10771 0.001,0.20722 1.5e-4,0.0746 0.008,0.14411 0.008,0.21911 -0.001,0.18741 -0.003,0.0851 -0.005,0.19068 8e-5,0.0825 -0.001,0.14453 -0.003,0.11834 -0.002,0.0534 -0.004,0.31611 -0.006,0.22066 -0.003,-0.15289 -0.0114,-0.28808 -0.0155,-0.43666 0.02,0.90832 0.0301,8.24643 0.03,15.96956 0,0.0497 1e-5,0.0531 0,0.10284 1.8e-4,7.72512 -0.01,15.06867 -0.03,15.9737 0.004,-0.14989 0.0127,-0.28651 0.0155,-0.4408 0.002,-0.0956 0.004,0.1675 0.006,0.22118 0.002,-0.0262 0.003,0.0358 0.003,0.11834 0.002,0.10561 0.004,0.003 0.005,0.19068 5.3e-4,0.075 -0.008,0.14452 -0.008,0.21911 -8.2e-4,0.0994 6e-5,0.0763 -0.001,0.20671 -0.004,0.49334 -0.0238,0.96853 -0.0548,1.43195 -0.008,0.10692 -0.0201,0.20996 -0.0295,0.31574 -0.23088,2.82692 -0.9738,5.12 -2.3151,7.1236 -1.73304,2.58877 -4.27441,4.46297 -7.27501,5.36556 -0.27086,0.0815 -0.57244,0.14852 -0.86971,0.21756 -0.002,4.2e-4 -0.003,10e-4 -0.005,0.002 -8.4e-4,2e-4 -0.002,3.1e-4 -0.003,5.1e-4 -0.27323,0.0633 -0.55136,0.12002 -0.84129,0.17209 -0.13803,0.0253 -0.27835,0.0481 -0.4191,0.0703 -0.25599,0.0402 -0.50914,0.078 -0.77205,0.10903 -0.0855,0.01 -0.174,0.017 -0.26045,0.0258 -0.77058,0.0815 -1.5543,0.13357 -2.31717,0.12868 l -0.54725,-0.004 -0.28267,0.003 0.11059,-0.004 -0.0419,-5.2e-4 0.6382,-0.0207 c -0.61618,0.0178 -8.365,0.0263 -16.27446,0.0258 -7.85091,3e-4 -15.55026,-0.009 -16.15457,-0.0263 l 0.64648,0.0212 -0.0408,5.2e-4 0.10956,0.004 -0.28267,-0.003 z"
       id="path4-9-2"
       style="fill:url(#linearGradient3994);fill-opacity:1" /><path
       id="path4-9-2-7"
       style="fill:url(#linearGradient4034);fill-opacity:1"
       d="m -225.43945,-422.97852 c -12.26027,0.13769 -24.53182,-0.22729 -36.78455,0.34417 -6.22404,0.79955 -11.33913,6.60078 -11.36571,12.87535 -0.37379,5.49924 -0.0575,11.11156 -0.16851,16.66132 -0.0115,7.60584 -0.21454,15.24258 0.63521,22.79339 0.83109,4.36618 4.40063,7.8181 8.45108,9.36946 2.25989,0.88817 4.72372,1.07445 7.12466,0.88014 11.89596,-0.0454 23.80972,0.30995 35.69016,-0.42555 4.92926,-0.72744 9.13247,-4.79851 10.44081,-9.61656 0.99006,-3.6272 0.41566,-7.54391 0.56556,-11.30242 0.0161,-10.11684 0.20331,-20.24924 -0.43008,-30.35113 -0.6067,-4.53979 -3.94912,-8.45809 -8.17747,-10.10335 -1.92927,-0.79952 -3.95003,-1.15925 -5.98116,-1.12482 z" /><script
       id="mesh_polyfill"
       type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script><g
       id="g3993-8"
       transform="matrix(0.65708639,0,0,0.65708639,43.421651,-74.608866)"
       style="stroke-width:1.52187"><path
         id="rect3968-0-55-2-5-0-7-4-5"
         style="opacity:1;fill:#000000;fill-opacity:1;stroke:#3bcd80;stroke-width:0;stroke-linecap:round"
         d="m -422.75823,-508.68767 c 1.67259,-2.897 -0.67413,-3.40398 -1.46659,-3.24273 l -22.3279,3.92234 c -1.28001,0.34299 -1.72712,0.96641 -1.72712,1.72724 v 40.53822 c 0,1.45801 1.98027,1.93242 2.68663,0.70895 z" /><path
         d="m -422.91416,-500.17078 c -0.45156,0.0189 -0.89555,0.23898 -1.16043,0.69778 l -22.83503,43.65395 c -1.67259,2.897 0.6742,3.404 1.46666,3.24274 l 22.32787,-3.92227 c 1.28004,-0.34297 1.72712,-0.9664 1.72712,-1.72722 v -40.53823 c 0,-0.91126 -0.77358,-1.43832 -1.52619,-1.40675 z m -1.81914,12.02929 a 0.70897757,0.70897757 0 0 1 0.70886,0.70896 v 8.97926 a 0.70897757,0.70897757 0 0 1 -0.70886,0.70884 0.70897757,0.70897757 0 0 1 -0.70883,-0.70884 v -8.97926 a 0.70897757,0.70897757 0 0 1 0.70883,-0.70896 z"
         style="opacity:1;fill:#000000;fill-opacity:1;stroke:#3bcd80;stroke-width:0;stroke-linecap:round"
         id="path3991-8-7-9" /></g><g
       id="g3993-8-2"
       transform="matrix(0.65708639,0,0,0.65708639,43.421651,-74.608866)"
       style="fill:url(#linearGradient3996);fill-opacity:1;stroke-width:1.52187"><path
         id="rect3968-0-55-2-5-0-7-4-5-3"
         style="opacity:1;fill:url(#linearGradient3997);fill-opacity:1;stroke:#3bcd80;stroke-width:0;stroke-linecap:round"
         d="m -422.75823,-508.68767 c 1.67259,-2.897 -0.67413,-3.40398 -1.46659,-3.24273 l -22.3279,3.92234 c -1.28001,0.34299 -1.72712,0.96641 -1.72712,1.72724 v 40.53822 c 0,1.45801 1.98027,1.93242 2.68663,0.70895 z" /><path
         d="m -422.91416,-500.17078 c -0.45156,0.0189 -0.89555,0.23898 -1.16043,0.69778 l -22.83503,43.65395 c -1.67259,2.897 0.6742,3.404 1.46666,3.24274 l 22.32787,-3.92227 c 1.28004,-0.34297 1.72712,-0.9664 1.72712,-1.72722 v -40.53823 c 0,-0.91126 -0.77358,-1.43832 -1.52619,-1.40675 z m -1.81914,12.02929 a 0.70897757,0.70897757 0 0 1 0.70886,0.70896 v 8.97926 a 0.70897757,0.70897757 0 0 1 -0.70886,0.70884 0.70897757,0.70897757 0 0 1 -0.70883,-0.70884 v -8.97926 a 0.70897757,0.70897757 0 0 1 0.70883,-0.70896 z"
         style="opacity:1;fill:url(#linearGradient3998);fill-opacity:1;stroke:#3bcd80;stroke-width:0;stroke-linecap:round"
         id="path3991-8-7-9-3" /></g></g></svg>
